import React, { useMemo, useState } from 'react';
import Button from '../../../components/ButtonOld/ButtonV2';
import Modal from '../../../components/OverLay/Modal';

const PickWish = ({ setStep, setShow }) => {
	const [showModal, setShowModal] = useState(false);
	const [showContent, setShowContent] = useState(false);
	const [currentContentId, setCurrentContentId] = useState(0);

	const [countNotAgreed, setCountNotAgreed] = useState(0);
	const wishList = useMemo(() => {
		const wishList = [
			{
				id: 0,
				title: 'ƒêi·ªÅu ∆∞·ªõc th·ª© m·ªôt',
				text: 'ƒê∆∞·ª£c l√†m b·∫°n g√°i anh Nh·∫≠t',
			},
			{
				id: 1,
				title: 'ƒêi·ªÅu ∆∞·ªõc th·ª© hai',

				text: 'Anh Nh√¢t l√†m b·∫°n trai L√™',
			},
			{
				id: 2,
				title: 'ƒêi·ªÅu ∆∞·ªõc th·ª© ba',
				text: 'ƒêi·ªÅu ∆∞·ªõc th·ª© m·ªôt + ƒëi·ªÅu ∆∞·ªõc th·ª© 2 = ƒëi·ªÅu ∆∞·ªõc th·ª© 3',
			},
			{
				id: 3,
				title: 'Duy·ªát',
				style: 'bg-pink-500 text-white',
				text: 'Hihihi duy·ªát nha duy·ªát nha, h·ªèng ƒë∆∞·ª£c h·ªëi h·∫≠n ƒë√¢u √°, v√¨ l·ª±a ch·ªçn n√†y t·∫∑ng b√© lu√¥n 3 ƒëi·ªÅu ∆∞·ªõc ƒë√£ ƒëi·ªÅn tr∆∞·ªõc ƒë√≥. ·∫§n ti·∫øp ƒë√™ ti·∫øp üôÇ',
			},
			{
				id: 4,
				title: 'Kh√¥ng duy·ªát',
				style: 'bg-slate-400 text-white',
				text: 'Th·ª©c d·ªçng, qu√° th·ª©c d·ªçng, con tim v·ª° tan, g·ªëi ∆°iiiiiiiiiiiiiii. Nh∆∞ng m√† hong ƒë∆∞·ª£c ƒë√¢u b√© ∆°i ph·∫£i duy·ªát √°, kh√¥ng duy·ªát l√† kh√¥ng qua c·ª≠a n√†y ƒë√¢u :)))',
			},
		];

		if (countNotAgreed === 1) {
			wishList[3].text =
				'B√© ƒë√£ ƒë∆∞·ª£c nh·∫≠n 3 ƒëi·ªÅu ∆∞·ªõc ƒë√£ ƒëi·ªÅn tr∆∞·ªõc ƒë√≥ ch·ª© kh√¥ng ph·∫£i 3 ƒëi·ªÅu ∆∞·ªõc n√†y n√™n ƒë·ª´ng lo. ƒê√≥ l√† n·∫øu tr∆∞·ªõc ƒë√≥ ph·∫£i ph·∫£i l√† "kh√¥ng duy·ªát" üôÇ. B√© l√†m anh ƒëau, anh d·ªói üò§. ·∫§n ti·∫øp ƒë√™ b√©, kh√¥ng c√≥ l·ª±a ch·ªçn kh√°c ƒë√¢u üôÇ';
		}

		if (countNotAgreed > 1) {
			wishList[4].text =
				'C√°i g√¨, c√≤n quay l·∫°i nh·∫•n kh√¥ng duy·ªát n·ªØa h·∫£, t∆∞·ªùng ∆°iiiiiiiiiiiiiiiiiiiiiii, tao t·ªõi ƒë√¢y. B·∫•m duy·ªát ƒëi m√†, kh√¥ng c√≥ s·ª± l·ª±a ch·ªçn kh√°c ƒë√¢u';
			wishList[3].text =
				'·∫§n ti·∫øp ƒëi b√©, kh√¥ng ·∫•n l√† kh√¥ng ti·∫øp t·ª•c ƒë∆∞·ª£c ƒë√¢u üòè';
		}
		if (countNotAgreed > 2) {
			wishList[4].text = `Tr·ªùi ∆°i duy·ªát ƒëi m√†aaaaaaa, l·∫ßn th·ª© ${countNotAgreed} r·ªìi ƒë√≥, tim ƒëau ${countNotAgreed} X 1000`;
		}
		return wishList;
	}, [countNotAgreed]);

	return (
		<>
			<Button
				fullWidth
				rounded
				animation
				color="bg-white text-pink-400 shadow-pink-500 shadow"
				onClick={() => {
					setShowModal(true);
					setStep(5);
				}}
			>
				Ki·ªÉm tra ƒëi·ªÅu ∆∞·ªõc
			</Button>
			<Modal show={showModal}>
				<div className="relative flex h-screen w-screen items-center justify-center px-4 md:h-[667px] md:w-[375px]">
					<div className="flex w-full flex-col gap-4">
						{wishList.map((wish) => (
							<Button
								key={wish.id}
								color={`${
									wish.style
										? wish.style
										: 'text-white bg-white text-pink-400 shadow-pink-500 shadow'
								} `}
								fullWidth
								rounded
								onClick={() => {
									setShowContent(true);
									setCurrentContentId(wish.id);
									if (wish.id === 4)
										setCountNotAgreed((prev) => ++prev);
								}}
							>
								{wish.title}
							</Button>
						))}
					</div>
				</div>

				<Modal
					show={showContent}
					setShow={setShowContent}
					hideCloseButton
				>
					<div className="w-screen p-4 sm:w-[375px]">
						<div className="flex min-h-[300px] w-full flex-col items-center justify-center rounded-xl bg-white p-4">
							<div
								onClick={() => setShowContent(false)}
								className="cursor-pointer rounded-xl bg-pink-200/50 px-8 py-2 text-center text-pink-500 active:bg-pink-200"
							>
								<div>{wishList[currentContentId].text}</div>
							</div>
							{currentContentId === 3 && (
								<Button
									size="small"
									onClick={() => {
										setShowModal(false);
										setShow(false);
										if (countNotAgreed > 0) setStep(6);
										else setStep(7);
									}}
									color="bg-pink-200/50 text-pink-500 mt-4 active:bg-pink-200"
								>
									Ti·∫øp
								</Button>
							)}
						</div>
					</div>
				</Modal>
			</Modal>
		</>
	);
};

export default PickWish;
