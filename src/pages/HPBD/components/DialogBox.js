import { useEffect, useMemo, useState } from 'react';
import Button from '../../../components/ButtonOld/ButtonV2';
import Popover from '../../../components/Popover';

const speeches = {
	0: [
		'Xin ch√†o, l√† anh IT ƒë·∫πp trai cute ph√¥ mai que ƒë√¢y üòò !!!',
		'Nh·∫≠n ƒë∆∞·ª£c t√≠n hi·ªáu t·ª´ v≈© tr·ª• üåå, t·ªõi sinh nh·∫≠t c√¥ g√°i ·∫•y r·ªìi...,',
		'N√™n anh trai IT xin l√†m m√¨nh l√†m m·∫©y l√†m ra lu√¥n c√°i mini game n√†y, v·ªõi mong mu·ªën l√†m t·ªën th·ªùi gian c·ªßa c√¥ g√°i ·∫•y...',
		'K·∫ø b√™n l√† n√∫t b·∫≠t nh·∫°c, ·∫•n v√¥ ƒë·ªÉ nghe nh·∫°c trong l√∫c ch·ªù ƒë·ªìng h·ªì ƒë·∫øm xong...',
	],

	1: [
		'ƒê·ªìng h·ªì ƒë√£ ƒëi·ªÉm, gi·ªù v√†ng ƒë√£ ƒë·∫øn...',
		'Ch√∫c m·ª´ng sinh nh·∫≠t Tr·∫ßn Th·ªã Qu·ª≥nh L√™ , h√∫ h√∫ ü•≥',
		'H√£y ·∫•n v√†o b√°nh kem üéÇ trong v√≤ng tr√≤n, s·ªë l·∫ßn nh·∫•n b·∫±ng v·ªõi s·ªë tu·ªïi c·ªßa b·∫°n üëÜ',
	],
	2: [
		'Nh·ªØng c√∫ click v·ª´a r·ªìi t·∫°m g·ªçi l√† th·ªïi n·∫øn üïØÔ∏è, ti·∫øp theo l√† unbox qu√† üéÅ...',
		'·∫§n v√†o h·ªôp qu√† ƒë·ªÉ m·ªü üëÜ',
	],

	3: [
		'ƒê√¢y l√† ti·∫øt m·ª•c ∆∞·ªõc nguy·ªán ƒë√™m khuya...',
		'V√¨ kho·∫£ng c√°ch ƒë·ªãa l√Ω chia r·∫Ω ƒë√¥i ta, ƒë·ªÉ th·∫±ng Qu√Ω n√≥ c√≥ c∆° h·ªôi h√†nh ƒë·ªông üôÇ...',
		'N√™n thay v√¨ m·ªôt ƒëi·ªÅu ∆∞·ªõc, b√© s·∫Ω c√≥ 3 ƒëi·ªÅu ∆∞·ªõc üå†, b·∫•t ng·ªù ch∆∞a...',
		'·∫§n v√†o t·ª´ng ƒëi·ªÅu ∆∞·ªõc üëÜ v√† nh·∫≠p ƒëi·ªÅu ∆∞·ªõc v√†o üå†, sao khi nh·∫≠p ƒë·ªß c·∫£ 3, ·∫•n n√∫t "ch·ªët ƒë∆°n" ƒë·ªÉ g·ª≠i ƒëi·ªÅu ∆∞·ªõc n√†y ƒë·∫øn anh IT ƒë·∫πp trai cute ph√¥ mai que...',
		'N·∫øu anh trai ·∫•y m√† th·∫•y 3 ƒëi·ªÅu ∆∞·ªõc h·ª£p l√Ω th√¨ th·ª±c hi·ªán, kh√¥ng h·ª£p l√Ω c≈©ng th·ª±c hi·ªán lu√¥n üëå',
		'Kh√¥ng d√†i d√≤ng n·ªØa, b·∫•m v√†o ƒëi·ªÅu ∆∞·ªõc v√† nh·∫≠p ∆∞·ªõc nguy·ªán c·ªßa m√¨nh n√†o!!!',
	],
	4: [
		'ƒê·ªÉ cho ch·∫Øc ƒÉn th√¨ vui l√≤ng ·∫•n v√†o "Ki·ªÉm tra ƒëi·ªÅu ∆∞·ªõc" üëÜ xem b·∫£n th√¢n ƒë√£ ƒëi·ªÅn h·ª£p l√Ω hay ch∆∞a.',
	],
	5: [
		'N·∫øu nh·∫≠n th·∫•y ƒëi·ªÅu ∆∞·ªõc n√†o kh√¥ng h·ª£p l√Ω h√£y ·∫•n kh√¥ng duy·ªát ƒë·ªÉ tr·ªü l·∫°i ch·ªânh s·ª≠a, n·∫øu t·∫•t c·∫£ ƒë·ªÅu perfect th√¨ duy·ªát v·ªôi',
	],
	6: [
		'ƒê√πa t√≠ th√¥i ch·ª© anh IT ƒë·∫πp trai cute ph√¥ mai que ƒë√£ l∆∞u 3 ƒëi·ªÅu ∆∞·ªõc ƒë√≥ r·ªìi nha',
	],
	7: [
		'C√≥ th·ªÉ anh ch∆∞a th·ª±c hi·ªán ƒë∆∞·ª£c ngay l·∫≠p t·ª©c nh∆∞ng s·∫Ω c·ªë g·∫Øng th·ª±c hi·ªán h·∫øt...',
		'V√¨ ƒë√¢y l√† s·∫£n ph·∫©m vi·∫øt h∆°i v·ªôi n√™n s·∫Ω c√≥ sai s√≥t mong b√© th√¥ng c·∫£m, h·ªèng th√¥ng c·∫£m th√¨ thoi, k·ªá...',
		'Cu·ªëi c√πng...',
		'Ch√∫c Tr·∫ßn Th·ªã Qu·ª≥nh L√™, tu·ªïi m·ªõi ƒë·∫°t ƒë∆∞·ª£c nhi·ªÅu th√†nh c√¥ng, c·∫ßu t√†i ƒë∆∞·ª£c t√†i, c·∫ßu ti·ªÅn ƒë∆∞·ª£c ti·ªÅn, c·∫ßu t√¨nh ƒë∆∞·ª£c t√¨nh (m√† ph·∫£i v·ªõi anh Nh·∫≠t m·ªõi dc), c·∫ßu g√¨ ƒë∆∞·ª£c n·∫•y..., h·∫°p b√¨ b·ªõt ƒë·ªÅ t√∫ du, h·∫°p b√¨ b·ªõt ƒë·ªÅ t√∫ du',
	],
};

const DialogBox = ({ step = 0, setEnd }) => {
	const [visible, setVisible] = useState(true);
	const [currentSceneId, setCurrentSceneId] = useState(0);
	const [scenes, setScenes] = useState([]);

	useEffect(() => {
		setScenes((prev) => [...prev, ...speeches[step]]);
		if (step === 6) setScenes((prev) => [...prev, ...speeches[7]]);
		if (!visible) {
			setVisible(true);
			setCurrentSceneId((prev) => ++prev);
		}
	}, [step]);

	const render = useMemo(() => {
		return (
			<Popover
				visible={visible}
				setVisible={setVisible}
				hideOnClickParent
				placement="top"
				render={
					<div className="w-[80vw] rounded-xl bg-white p-2 text-blue-900 shadow md:max-w-[300px]">
						<span>{scenes[currentSceneId]}</span>
						<div className="mt-2 flex justify-end gap-1">
							{currentSceneId === scenes.length - 1 ? (
								<Button
									onClick={() => {
										setVisible(false);
										if (step === 7 || step === 6)
											setEnd(true);
									}}
									size="small"
									color="bg-blue-400/20 text-blue-500"
								>
									ƒê√≥ng
								</Button>
							) : (
								<Button
									onClick={() => {
										setCurrentSceneId((prev) => ++prev);
									}}
									size="small"
									color="bg-blue-400/20 text-blue-500"
								>
									Ti·∫øp
								</Button>
							)}
						</div>
					</div>
				}
			>
				<Button
					rounded
					color="bg-white text-blue-400"
					className="shadow-md shadow-blue-300"
					centerIcon={<i className="fa-solid fa-comment-dots"></i>}
				/>
			</Popover>
		);
	}, [currentSceneId, scenes, setEnd, step, visible]);

	return <>{render}</>;
};

export default DialogBox;
